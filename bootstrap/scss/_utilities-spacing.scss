// Margin and Padding

.m-x-auto {
  margin-right: auto !important;
  margin-left:  auto !important;
}

@each $prop, $abbrev in (margin: m, padding: p) {
  @each $size, $lengths in $spacers {
    $length-x:   map-get($lengths, x);
    $length-y:   map-get($lengths, y);

    .#{$abbrev}-a-#{$size} { #{$prop}:        $length-y $length-x !important; } // a = All sides
    .#{$abbrev}-t-#{$size} { #{$prop}-top:    $length-y !important; }
    .#{$abbrev}-r-#{$size} { #{$prop}-right:  $length-x !important; }
    .#{$abbrev}-b-#{$size} { #{$prop}-bottom: $length-y !important; }
    .#{$abbrev}-l-#{$size} { #{$prop}-left:   $length-x !important; }

    // Axes
    .#{$abbrev}-x-#{$size} {
      #{$prop}-right:  $length-x !important;
      #{$prop}-left:   $length-x !important;
    }
    .#{$abbrev}-y-#{$size} {
      #{$prop}-top:    $length-y !important;
      #{$prop}-bottom: $length-y !important;
    }
  }
}

// Positioning

.pos-f-t {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $zindex-navbar-fixed;
}


// Pascal's stuff
.pLeft {
  padding-left: $grid-gutter-width/2;
}
.pRight {
  padding-right: $grid-gutter-width/2;
}
.pTop {
  padding-top: $grid-gutter-width/2;
}
.pBottom {
  padding-bottom: $grid-gutter-width/2;
}
.pX {
  padding-left: $grid-gutter-width/2;
  padding-right: $grid-gutter-width/2;
}
.pY {
  padding-top: $grid-gutter-width/2;
  padding-bottom: $grid-gutter-width/2;
}
.pAll {
  padding-left: $grid-gutter-width/2;
  padding-right: $grid-gutter-width/2;
  padding-top: $grid-gutter-width/2;
  padding-bottom: $grid-gutter-width/2;
}

.pLeft0 {
  padding-left: 0;
}
.pRight0 {
  padding-right: 0;
}
.pTop0 {
  padding-top: 0;
}
.pBottom0 {
  padding-bottom: 0;
}
.pX0 {
  padding-left: 0;
  padding-right: 0;
}
.pY0 {
  padding-top: 0;
  padding-bottom: 0;
}
.p0 {
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
}